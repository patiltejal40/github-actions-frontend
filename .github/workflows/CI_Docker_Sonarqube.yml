# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build_Test_Build-and-Push-to_Docker_SonarCloud

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  Gradle-Build-And-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Branch
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.16.0"
      - run: npm install
      - run: npm run build --if-present
      - run: npm test

  SonarCloud-Scan:
    needs: Gradle-Build-And-Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Branch
        uses: actions/checkout@v4
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**
            -Dsonar.branch.name=${{ github.ref_name }}

  Build-And-Push-Docker-Image:
    needs: SonarCloud-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Branch
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          export TZ=Asia/Kolkata
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/github-actions-backend:${TIMESTAMP}
          LATEST_TAG=${{ secrets.DOCKER_USERNAME }}/github-actions-backend:${BRANCH_NAME}-latest
          docker build -t ${IMAGE_TAG} -t ${LATEST_TAG} .
          docker push ${IMAGE_TAG}
          docker push ${LATEST_TAG}
